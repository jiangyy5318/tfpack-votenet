[32m[0906 21:46:31 @logger.py:83][0m Existing log file 'train_log/run/log.log' backuped to 'train_log/run/log.log.0906-214631'
[32m[0906 21:46:31 @logger.py:90][0m Argv: run.py
[32m[0906 21:46:31 @parallel.py:192][0m [MultiProcessPrefetchData] Will fork a dataflow more than one times. This assumes the datapoints are i.i.d.
[32m[0906 21:46:31 @training.py:49][0m [DataParallel] Training a model of 2 towers.
[32m[0906 21:46:31 @interface.py:43][0m Automatically applying StagingInput on the DataFlow.
[32m[0906 21:46:31 @input_source.py:221][0m Setting up the queue 'QueueInput/input_queue' for CPU prefetching ...
[32m[0906 21:46:31 @training.py:111][0m Building graph for training tower 0 ...
[32m[0906 21:46:31 @registry.py:126][0m sa1/conv0 input: [None, 2048, 64, 3]
[32m[0906 21:46:31 @registry.py:134][0m sa1/conv0 output: [None, 2048, 64, 64]
[32m[0906 21:46:31 @registry.py:126][0m sa1/conv1 input: [None, 2048, 64, 64]
[32m[0906 21:46:31 @registry.py:134][0m sa1/conv1 output: [None, 2048, 64, 64]
[32m[0906 21:46:31 @registry.py:126][0m sa1/conv2 input: [None, 2048, 64, 64]
[32m[0906 21:46:31 @registry.py:134][0m sa1/conv2 output: [None, 2048, 64, 128]
[32m[0906 21:46:31 @registry.py:126][0m sa2/conv0 input: [None, 1024, 32, 131]
[32m[0906 21:46:31 @registry.py:134][0m sa2/conv0 output: [None, 1024, 32, 128]
[32m[0906 21:46:31 @registry.py:126][0m sa2/conv1 input: [None, 1024, 32, 128]
[32m[0906 21:46:31 @registry.py:134][0m sa2/conv1 output: [None, 1024, 32, 128]
[32m[0906 21:46:31 @registry.py:126][0m sa2/conv2 input: [None, 1024, 32, 128]
[32m[0906 21:46:32 @registry.py:134][0m sa2/conv2 output: [None, 1024, 32, 256]
[32m[0906 21:46:32 @registry.py:126][0m sa3/conv0 input: [None, 512, 16, 259]
[32m[0906 21:46:32 @registry.py:134][0m sa3/conv0 output: [None, 512, 16, 128]
[32m[0906 21:46:32 @registry.py:126][0m sa3/conv1 input: [None, 512, 16, 128]
[32m[0906 21:46:32 @registry.py:134][0m sa3/conv1 output: [None, 512, 16, 128]
[32m[0906 21:46:32 @registry.py:126][0m sa3/conv2 input: [None, 512, 16, 128]
[32m[0906 21:46:32 @registry.py:134][0m sa3/conv2 output: [None, 512, 16, 256]
[32m[0906 21:46:32 @registry.py:126][0m sa4/conv0 input: [None, 256, 16, 259]
[32m[0906 21:46:32 @registry.py:134][0m sa4/conv0 output: [None, 256, 16, 128]
[32m[0906 21:46:32 @registry.py:126][0m sa4/conv1 input: [None, 256, 16, 128]
[32m[0906 21:46:32 @registry.py:134][0m sa4/conv1 output: [None, 256, 16, 128]
[32m[0906 21:46:32 @registry.py:126][0m sa4/conv2 input: [None, 256, 16, 128]
[32m[0906 21:46:32 @registry.py:134][0m sa4/conv2 output: [None, 256, 16, 256]
[32m[0906 21:46:32 @registry.py:126][0m fp1/conv_0 input: [None, 512, 1, 512]
[32m[0906 21:46:32 @registry.py:134][0m fp1/conv_0 output: [None, 512, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m fp1/conv_1 input: [None, 512, 1, 256]
[32m[0906 21:46:32 @registry.py:134][0m fp1/conv_1 output: [None, 512, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m fp2/conv_0 input: [None, 1024, 1, 512]
[32m[0906 21:46:32 @registry.py:134][0m fp2/conv_0 output: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m fp2/conv_1 input: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:134][0m fp2/conv_1 output: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m voting_mlp_0 input: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:134][0m voting_mlp_0 output: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m voting_mlp_1 input: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:134][0m voting_mlp_1 output: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:126][0m voting_mlp_2 input: [None, 1024, 1, 256]
[32m[0906 21:46:32 @registry.py:134][0m voting_mlp_2 output: [None, 1024, 1, 259]
[32m[0906 21:46:32 @registry.py:126][0m proposal/conv0 input: [None, 1000, 64, 259]
[32m[0906 21:46:32 @registry.py:134][0m proposal/conv0 output: [None, 1000, 64, 128]
[32m[0906 21:46:32 @registry.py:126][0m proposal/conv1 input: [None, 1000, 64, 128]
[32m[0906 21:46:33 @registry.py:134][0m proposal/conv1 output: [None, 1000, 64, 128]
[32m[0906 21:46:33 @registry.py:126][0m proposal/conv2 input: [None, 1000, 64, 128]
[32m[0906 21:46:33 @registry.py:134][0m proposal/conv2 output: [None, 1000, 64, 128]
[32m[0906 21:46:33 @registry.py:126][0m proposal/conv_post_0 input: [None, 1000, 1, 128]
[32m[0906 21:46:33 @registry.py:134][0m proposal/conv_post_0 output: [None, 1000, 1, 128]
[32m[0906 21:46:33 @registry.py:126][0m proposal/conv_post_1 input: [None, 1000, 1, 128]
[32m[0906 21:46:33 @registry.py:134][0m proposal/conv_post_1 output: [None, 1000, 1, 128]
[32m[0906 21:46:33 @registry.py:126][0m proposal/conv_post_2 input: [None, 1000, 1, 128]
[32m[0906 21:46:33 @registry.py:134][0m proposal/conv_post_2 output: [None, 1000, 1, 79]
Traceback (most recent call last):
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1628, in _create_c_op
    c_op = c_api.TF_FinishOperation(op_desc)
tensorflow.python.framework.errors_impl.InvalidArgumentError: Dimensions must be equal, but are 9 and 64 for 'tower0/add_3' (op: 'Add') with input shapes: [?,20480,9], [?,?,64].

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "run.py", line 159, in <module>
    launch_train_with_config(config, trainer)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/train/interface.py", line 91, in launch_train_with_config
    model._build_graph_get_cost, model.get_optimizer)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/utils/argtools.py", line 176, in wrapper
    return func(*args, **kwargs)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/train/tower.py", line 219, in setup_graph
    train_callbacks = self._setup_graph(input, get_cost_fn, get_opt_fn)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/train/trainers.py", line 101, in _setup_graph
    grad_list = self._builder.call_for_each_tower(tower_fn)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/graph_builder/training.py", line 158, in call_for_each_tower
    return DataParallelBuilder.build_on_towers(self.towers, tower_fn, devices)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/graph_builder/training.py", line 121, in build_on_towers
    return DataParallelBuilder.call_for_each_tower(*args, **kwargs)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/graph_builder/training.py", line 116, in call_for_each_tower
    ret.append(func())
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/train/tower.py", line 275, in get_grad_fn
    return compute_grad_from_inputs(*inputs)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/train/tower.py", line 250, in compute_grad_from_inputs
    cost = get_cost_fn(*inputs)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/tfutils/tower.py", line 287, in __call__
    output = self._tower_fn(*args)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorpack/graph_builder/model_desc.py", line 261, in _build_graph_get_cost
    ret = self.build_graph(*inputs)
  File "/home/jiangyy/projects/tfpack-votenet/model/model_v1_3.py", line 383, in build_graph
    vote_loss = self.vote_reg_loss(seed_xyz, vote_xyz, fp2_inds, vote_label, vote_label_mask)
  File "/home/jiangyy/projects/tfpack-votenet/model/model_v1_3.py", line 126, in vote_reg_loss
    seed_gt_votes = vote_label + tf.cast(seed_inds, tf.float32)#+ tf.tile(seed_xyz, [1, 1, 3])
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/ops/math_ops.py", line 866, in binary_op_wrapper
    return func(x, y, name=name)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/ops/gen_math_ops.py", line 301, in add
    "Add", x=x, y=y, name=name)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 787, in _apply_op_helper
    op_def=op_def)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/util/deprecation.py", line 488, in new_func
    return func(*args, **kwargs)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 3274, in create_op
    op_def=op_def)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1792, in __init__
    control_input_ops)
  File "/home/jiangyy/.local/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1631, in _create_c_op
    raise ValueError(str(e))
ValueError: Dimensions must be equal, but are 9 and 64 for 'tower0/add_3' (op: 'Add') with input shapes: [?,20480,9], [?,?,64].
